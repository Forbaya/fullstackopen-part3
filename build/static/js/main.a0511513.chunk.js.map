{"version":3,"sources":["PersonService.js","Filter.js","AddPersonForm.js","Person.js","Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","id","delete","person","newNumber","updated","number","put","Filter","filter","setFilter","value","onChange","e","target","AddPersonForm","persons","setPersons","newName","setNewName","setNewNumber","setNotification","setError","onSubmit","preventDefault","map","name","includes","window","confirm","find","p","personService","updatedPerson","concat","returnedPerson","notification","type","message","setTimeout","Person","onClick","catch","error","deletePerson","Notification","className","App","useState","filteredPersons","setFilteredPersons","useEffect","returnedPersons","updateFilteredPersons","toLowerCase","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0511513.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst updateNumber = (person, newNumber) => {\n    const updated = { ...person, number: newNumber }\n    const request = axios.put(`${baseUrl}/${person.id}`, updated)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, deletePerson, updateNumber }","import React from 'react'\n\nconst Filter = ({filter, setFilter}) => {\n    const handleFilterChange = (e) => {\n        setFilter(e.target.value)\n    }\n\n    return (\n        <div>\n            filter shown with <input value={filter} onChange={handleFilterChange}/>\n        </div>\n    )\n}\n\nexport default Filter\n","import React from 'react'\n\nimport personService from './PersonService'\n\nconst AddPersonForm = ({persons, setPersons, newName, setNewName, newNumber, setNewNumber,\n                           setNotification, setError}) => {\n    const addPerson = e => {\n        e.preventDefault()\n\n        if (persons.map(person => person.name).includes(newName)) {\n            const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n            if (result) {\n                const person = persons.find(p => p.name === newName)\n\n                personService\n                    .updateNumber(person, newNumber)\n                    .then(updatedPerson => {\n                        setPersons(persons.filter(p => p.name !== newName).concat(updatedPerson))\n                        setNewName('')\n                        setNewNumber('')\n                    })\n            }\n        } else {\n            const newPerson = {name: newName, number: newNumber}\n\n            personService\n                .create(newPerson)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson))\n                    setNewName('')\n                    setNewNumber('')\n\n                    const notification = {\n                        type: 'info',\n                        message: `Added ${newName}`\n                    }\n                    setNotification(notification)\n\n                    setTimeout(() => {\n                        setNotification(null)\n                    }, 5000)\n                })\n        }\n    }\n\n    const handleNameChange = e => {\n        setNewName(e.target.value)\n    }\n\n    const handleNumberChange = e => {\n        setNewNumber(e.target.value)\n    }\n\n    return (\n        <form onSubmit={addPerson}>\n            <div>\n                name: <input value={newName} onChange={handleNameChange}/>\n            </div>\n            <div>\n                number: <input value={newNumber} onChange={handleNumberChange}/>\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default AddPersonForm","import React from 'react'\n\nimport personService from './PersonService'\n\nconst Person = ({person, persons, setPersons, setNotification}) => {\n    const deletePerson = person => {\n        const result = window.confirm(`Delete ${person.name}?`)\n\n        if (result) {\n            personService\n                .deletePerson(person.id)\n                .then(response => {\n                    setPersons(persons.filter(p => p.id !== person.id))\n                })\n                .catch(error => {\n                    const notification = {\n                        type: 'error',\n                        message: `Information of ${person.name} has already been removed from the server`\n                    }\n                    setNotification(notification)\n\n                    setTimeout(() => {\n                        setNotification(null)\n                    }, 5000)\n                })\n        }\n\n    }\n\n    return (\n        <div>\n            <span>{person.name} {person.number}</span>\n            <button onClick={() => deletePerson(person)}>delete</button>\n        </div>\n    )\n}\n\nexport default Person","import React from 'react'\nimport './style.css'\n\nconst Notification = ({ notification }) => {\n    if (notification === null) {\n        return null\n    }\n\n    return (\n        <div className={notification.type}>\n            {notification.message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useEffect, useState } from 'react'\n\nimport personService from './PersonService'\nimport Filter from \"./Filter\";\nimport AddPersonForm from \"./AddPersonForm\";\nimport Person from \"./Person\";\nimport Notification from \"./Notification\"\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [filteredPersons, setFilteredPersons] = useState(persons)\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filter, setFilter] = useState('')\n    const [notification, setNotification] = useState(null)\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(returnedPersons => {\n                setPersons(returnedPersons)\n            })\n    }, [])\n\n    const updateFilteredPersons = () => {\n        const filteredPersons = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n        setFilteredPersons(filteredPersons)\n    }\n\n    useEffect(() => updateFilteredPersons(), [filter])\n    useEffect(() => updateFilteredPersons(), [persons])\n\n    return (\n        <div>\n            <h2>Phone book</h2>\n            <Notification notification={notification}/>\n            <Filter filter={filter} setFilter={setFilter}/>\n            <AddPersonForm\n                persons={persons}\n                setPersons={setPersons}\n                newName={newName}\n                setNewName={setNewName}\n                newNumber={newNumber}\n                setNewNumber={setNewNumber}\n                setNotification={setNotification}\n            />\n            <h2>Numbers</h2>\n            {filteredPersons.map(person =>\n                <Person\n                    key={person.id}\n                    person={person}\n                    persons={persons}\n                    setPersons={setPersons}\n                    setNotification={setNotification}\n                />\n            )}\n        </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}